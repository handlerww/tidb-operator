name: e2e-simple

on:
  push:
    branches:
      - multicluster-e2e

jobs:
  e2e-cases:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - multi-cluster
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: go/src/github.com/${{ github.repository }}

      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/go/mod/pkg
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Creating kind cluster
        run: |
          SKIP_BUILD=y SKIP_IMAGE_BUILD=y SKIP_DOWN=y SKIP_TEST=y KUBE_WORKERS=0 ./hack/e2e.sh
          echo "info: waiting for all nodes to be ready"
          kubectl wait --for=condition=Ready nodes --all --timeout=120s
          echo "info: waiting for all pods in kube-system namespace to be ready"
          kubectl -n kube-system wait --for=condition=Ready pods --all
          echo "info: print cluster information"
          kubectl get nodes
          kubectl get pods -n kube-system
          helm version
          kubectl version
          echo "info: create pingcap namespace for configurations"
          kubectl create ns pingcap
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}

      - name: e2e(${{ matrix.job }})
        run: |
          SKIP_UP=y ./hack/e2e.sh -- --ginkgo.focus='${{ matrix.job }}'
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
